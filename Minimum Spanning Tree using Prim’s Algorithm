#include <stdio.h>
#define INF 9999
#define MAX 100

void prims(int n, int graph[MAX][MAX]) {
    int selected[MAX];
    int no_of_edges = 0;
    int i, j, u, v, min;

    // Initially no vertex is selected
    for (i = 0; i < n; i++)
        selected[i] = 0;

    // Start from vertex 0
    selected[0] = 1;

    printf("Edges in the Minimum Spanning Tree:\n");

    while (no_of_edges < n - 1) {
        min = INF;
        u = v = -1;

        // Find minimum edge from selected to unselected vertices
        for (i = 0; i < n; i++) {
            if (selected[i]) {
                for (j = 0; j < n; j++) {
                    if (!selected[j] && graph[i][j]) {
                        if (graph[i][j] < min) {
                            min = graph[i][j];
                            u = i;
                            v = j;
                        }
                    }
                }
            }
        }

        if (u != -1 && v != -1) {
            printf("%d - %d : %d\n", u, v, graph[u][v]);
            selected[v] = 1;
            no_of_edges++;
        }
    }
}

int main() {
    int n, i, j;
    int graph[MAX][MAX];

    printf("Enter number of vertices: ");
    scanf("%d", &n);

    printf("Enter adjacency matrix (0 if no edge):\n");
    for (i = 0; i < n; i++) {
        for (j = 0; j < n; j++) {
            scanf("%d", &graph[i][j]);
            if (graph[i][j] == 0 && i != j)
                graph[i][j] = INF; // No edge treated as INF
        }
    }

    prims(n, graph);

    return 0;
}

